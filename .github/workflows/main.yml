name: CI

# Run on git push, PR, or manually from the Actions tab
on: [push, pull_request, workflow_dispatch]

jobs:
        
  arm64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt install -y python3 make build-essential libssl-dev zlib1g-dev vim wget curl git zip unzip git-core gcc llvm libncurses5-dev libffi-dev liblzma-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev python-openssl xz-utils dos2unix && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              ls && \
              ls /usr/bin && \
              pwd && \
              python3 --version && \
              echo ============installing dependencies=================================== && \
              git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv && \
              ls && \
              echo =========================== contents of HOME ========================== && \
              ls -a $HOME/ && \
              file $HOME/.bashrc && \
              file $HOME/.pyenv && \
              echo =========================== contents of usr/bin ========================== && \
              ls /usr/bin && \
              pwd && \
              python3 --version && \
              touch $HOME/.bashrc && \
              export PYENV_ROOT="$HOME/.pyenv" >> $HOME/.bashrc && \
              export PATH="$PYENV_ROOT/bin:$PATH" >> $HOME/.bashrc && \
              if command -v pyenv 1>/dev/null 2>&1; then eval "$(pyenv init -)" ; fi >> $HOME/.bashrc && \
              source $HOME/.bashrc && \
              pyenv install -l && \
              pyenv install 3.8.11 && \
              pyenv versions && \
              pyenv global 3.8.11 && \
              git clone https://github.com/yyuu/pyenv-virtualenv.git   $HOME/.pyenv/plugins/pyenv-virtualenv && \
              source $HOME/.bashrc && \
              pyenv install 3.8.11 && \
              pyenv virtualenv 3.8.11 venv_project1 && \
              pyenv versions && \
              pyenv activate venv_project1 && \
              pwd && \
              ls && \
              pip install enum34 aenum && \
              export PATH="$HOME/.pyenv/bin:$PATH"
              eval "$(pyenv init -)"
              eval "$(pyenv init --path)"
              eval "$(pyenv virtualenv-init -)"
              ./run_test.sh && \
              deactivate'
